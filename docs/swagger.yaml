basePath: /
definitions:
  model.RegistrationKey:
    properties:
      created_at:
        type: string
      description:
        type: string
      expires_at:
        type: string
      id:
        type: integer
      key:
        type: string
      permanent:
        type: boolean
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      last_login:
        type: string
      registration_key:
        $ref: '#/definitions/model.RegistrationKey'
      registration_key_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the REST API of Project Lighthouse
  title: Lighthouse API
  version: "1.0"
paths:
  /register:
    post:
      consumes:
      - application/json
      description: Creates a user with a registration key (no extra auth needed)
      operationId: RegisterUser
      produces:
      - text/plain
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
  /user:
    post:
      consumes:
      - application/json
      description: Creates a user without a registration key (permissions needed)
      produces:
      - text/plain
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
  /user/{id}:
    delete:
      description: Creates a user with a registration key (no extra auth needed)
      operationId: RegisterUser
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
    get:
      description: Returns a user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
  /users:
    get:
      description: Returns a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
swagger: "2.0"
